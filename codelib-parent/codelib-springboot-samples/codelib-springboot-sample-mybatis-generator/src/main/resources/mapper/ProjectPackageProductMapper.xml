<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="entities.business.mapper.ProjectPackageProductMapper">
  <resultMap id="BaseResultMap" type="entities.business.ProjectPackageProduct">
    <constructor>
      <idArg column="PACKAGE_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <idArg column="PROJECT_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PACKAGE_PRODUCT_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATE_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="CREATE_USERID" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PACKAGE_ID, PROJECT_ID, PACKAGE_PRODUCT_ID, CREATE_TIME, CREATE_USERID
  </sql>
  <select id="selectByExample" parameterType="entities.business.ProjectPackageProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_package_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="entities.business.ProjectPackageProductKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_package_product
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="entities.business.ProjectPackageProductKey">
    delete from project_package_product
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="entities.business.ProjectPackageProductExample">
    delete from project_package_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entities.business.ProjectPackageProduct">
    insert into project_package_product (PACKAGE_ID, PROJECT_ID, PACKAGE_PRODUCT_ID, 
      CREATE_TIME, CREATE_USERID)
    values (#{packageId,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{packageProductId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entities.business.ProjectPackageProduct">
    insert into project_package_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        PACKAGE_ID,
      </if>
      <if test="projectId != null">
        PROJECT_ID,
      </if>
      <if test="packageProductId != null">
        PACKAGE_PRODUCT_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserid != null">
        CREATE_USERID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageId != null">
        #{packageId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="packageProductId != null">
        #{packageProductId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entities.business.ProjectPackageProductExample" resultType="java.lang.Long">
    select count(*) from project_package_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project_package_product
    <set>
      <if test="record.packageId != null">
        PACKAGE_ID = #{record.packageId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.packageProductId != null">
        PACKAGE_PRODUCT_ID = #{record.packageProductId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserid != null">
        CREATE_USERID = #{record.createUserid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project_package_product
    set PACKAGE_ID = #{record.packageId,jdbcType=VARCHAR},
      PROJECT_ID = #{record.projectId,jdbcType=VARCHAR},
      PACKAGE_PRODUCT_ID = #{record.packageProductId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_USERID = #{record.createUserid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entities.business.ProjectPackageProduct">
    update project_package_product
    <set>
      <if test="packageProductId != null">
        PACKAGE_PRODUCT_ID = #{packageProductId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        CREATE_USERID = #{createUserid,jdbcType=VARCHAR},
      </if>
    </set>
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="entities.business.ProjectPackageProduct">
    update project_package_product
    set PACKAGE_PRODUCT_ID = #{packageProductId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USERID = #{createUserid,jdbcType=VARCHAR}
    where PACKAGE_ID = #{packageId,jdbcType=VARCHAR}
      and PROJECT_ID = #{projectId,jdbcType=VARCHAR}
  </update>
</mapper>