<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="entities.business.mapper.SysProfessorDoctorMapper">
  <resultMap id="BaseResultMap" type="entities.business.SysProfessorDoctor">
    <constructor>
      <idArg column="DOCTOR_PROFESSOR_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="DOCTOR_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PROFESSOR_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="COMPANY_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="IS_ENABLED" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="IS_DELETED" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="CREATE_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="CREATE_USERID" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    DOCTOR_PROFESSOR_ID, DOCTOR_ID, PROFESSOR_ID, COMPANY_ID, IS_ENABLED, IS_DELETED, 
    CREATE_TIME, CREATE_USERID
  </sql>
  <select id="selectByExample" parameterType="entities.business.SysProfessorDoctorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_professor_doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_professor_doctor
    where DOCTOR_PROFESSOR_ID = #{doctorProfessorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_professor_doctor
    where DOCTOR_PROFESSOR_ID = #{doctorProfessorId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entities.business.SysProfessorDoctorExample">
    delete from sys_professor_doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entities.business.SysProfessorDoctor">
    insert into sys_professor_doctor (DOCTOR_PROFESSOR_ID, DOCTOR_ID, PROFESSOR_ID, 
      COMPANY_ID, IS_ENABLED, IS_DELETED, 
      CREATE_TIME, CREATE_USERID)
    values (#{doctorProfessorId,jdbcType=INTEGER}, #{doctorId,jdbcType=VARCHAR}, #{professorId,jdbcType=VARCHAR}, 
      #{companyId,jdbcType=VARCHAR}, #{isEnabled,jdbcType=BIT}, #{isDeleted,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entities.business.SysProfessorDoctor">
    insert into sys_professor_doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorProfessorId != null">
        DOCTOR_PROFESSOR_ID,
      </if>
      <if test="doctorId != null">
        DOCTOR_ID,
      </if>
      <if test="professorId != null">
        PROFESSOR_ID,
      </if>
      <if test="companyId != null">
        COMPANY_ID,
      </if>
      <if test="isEnabled != null">
        IS_ENABLED,
      </if>
      <if test="isDeleted != null">
        IS_DELETED,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserid != null">
        CREATE_USERID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorProfessorId != null">
        #{doctorProfessorId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="professorId != null">
        #{professorId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entities.business.SysProfessorDoctorExample" resultType="java.lang.Long">
    select count(*) from sys_professor_doctor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_professor_doctor
    <set>
      <if test="record.doctorProfessorId != null">
        DOCTOR_PROFESSOR_ID = #{record.doctorProfessorId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null">
        DOCTOR_ID = #{record.doctorId,jdbcType=VARCHAR},
      </if>
      <if test="record.professorId != null">
        PROFESSOR_ID = #{record.professorId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        COMPANY_ID = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnabled != null">
        IS_ENABLED = #{record.isEnabled,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        IS_DELETED = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserid != null">
        CREATE_USERID = #{record.createUserid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_professor_doctor
    set DOCTOR_PROFESSOR_ID = #{record.doctorProfessorId,jdbcType=INTEGER},
      DOCTOR_ID = #{record.doctorId,jdbcType=VARCHAR},
      PROFESSOR_ID = #{record.professorId,jdbcType=VARCHAR},
      COMPANY_ID = #{record.companyId,jdbcType=VARCHAR},
      IS_ENABLED = #{record.isEnabled,jdbcType=BIT},
      IS_DELETED = #{record.isDeleted,jdbcType=BIT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_USERID = #{record.createUserid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entities.business.SysProfessorDoctor">
    update sys_professor_doctor
    <set>
      <if test="doctorId != null">
        DOCTOR_ID = #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="professorId != null">
        PROFESSOR_ID = #{professorId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        COMPANY_ID = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="isEnabled != null">
        IS_ENABLED = #{isEnabled,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        IS_DELETED = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        CREATE_USERID = #{createUserid,jdbcType=VARCHAR},
      </if>
    </set>
    where DOCTOR_PROFESSOR_ID = #{doctorProfessorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entities.business.SysProfessorDoctor">
    update sys_professor_doctor
    set DOCTOR_ID = #{doctorId,jdbcType=VARCHAR},
      PROFESSOR_ID = #{professorId,jdbcType=VARCHAR},
      COMPANY_ID = #{companyId,jdbcType=VARCHAR},
      IS_ENABLED = #{isEnabled,jdbcType=BIT},
      IS_DELETED = #{isDeleted,jdbcType=BIT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USERID = #{createUserid,jdbcType=VARCHAR}
    where DOCTOR_PROFESSOR_ID = #{doctorProfessorId,jdbcType=INTEGER}
  </update>
</mapper>