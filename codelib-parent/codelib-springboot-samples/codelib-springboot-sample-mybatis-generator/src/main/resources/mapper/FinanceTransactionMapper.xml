<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="entities.business.mapper.FinanceTransactionMapper">
  <resultMap id="BaseResultMap" type="entities.business.FinanceTransaction">
    <constructor>
      <idArg column="TRANSACTION_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ORDER_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ORDER_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="AMOUNT" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="PAY_TYPE" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="IS_SUCCESS" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="MESSAGE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TRANSACTION_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATE_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="MEMO" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="entities.business.FinanceTransaction">
    <constructor>
      <idArg column="TRANSACTION_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ORDER_ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="ORDER_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="AMOUNT" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="PAY_TYPE" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="IS_SUCCESS" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="MESSAGE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="TRANSACTION_CODE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CREATE_TIME" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="MEMO" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="RESULT" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TRANSACTION_ID, ORDER_ID, ORDER_CODE, AMOUNT, PAY_TYPE, IS_SUCCESS, MESSAGE, TRANSACTION_CODE, 
    CREATE_TIME, MEMO
  </sql>
  <sql id="Blob_Column_List">
    RESULT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="entities.business.FinanceTransactionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from finance_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="entities.business.FinanceTransactionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finance_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from finance_transaction
    where TRANSACTION_ID = #{transactionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from finance_transaction
    where TRANSACTION_ID = #{transactionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entities.business.FinanceTransactionExample">
    delete from finance_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entities.business.FinanceTransaction">
    insert into finance_transaction (TRANSACTION_ID, ORDER_ID, ORDER_CODE, 
      AMOUNT, PAY_TYPE, IS_SUCCESS, 
      MESSAGE, TRANSACTION_CODE, CREATE_TIME, 
      MEMO, RESULT)
    values (#{transactionId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{orderCode,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{payType,jdbcType=INTEGER}, #{isSuccess,jdbcType=BIT}, 
      #{message,jdbcType=VARCHAR}, #{transactionCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{memo,jdbcType=VARCHAR}, #{result,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="entities.business.FinanceTransaction">
    insert into finance_transaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        TRANSACTION_ID,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="orderCode != null">
        ORDER_CODE,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="payType != null">
        PAY_TYPE,
      </if>
      <if test="isSuccess != null">
        IS_SUCCESS,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="transactionCode != null">
        TRANSACTION_CODE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="memo != null">
        MEMO,
      </if>
      <if test="result != null">
        RESULT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        #{transactionId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="isSuccess != null">
        #{isSuccess,jdbcType=BIT},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="transactionCode != null">
        #{transactionCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entities.business.FinanceTransactionExample" resultType="java.lang.Long">
    select count(*) from finance_transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update finance_transaction
    <set>
      <if test="record.transactionId != null">
        TRANSACTION_ID = #{record.transactionId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null">
        ORDER_CODE = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.isSuccess != null">
        IS_SUCCESS = #{record.isSuccess,jdbcType=BIT},
      </if>
      <if test="record.message != null">
        MESSAGE = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionCode != null">
        TRANSACTION_CODE = #{record.transactionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memo != null">
        MEMO = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        RESULT = #{record.result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update finance_transaction
    set TRANSACTION_ID = #{record.transactionId,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      ORDER_CODE = #{record.orderCode,jdbcType=VARCHAR},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      IS_SUCCESS = #{record.isSuccess,jdbcType=BIT},
      MESSAGE = #{record.message,jdbcType=VARCHAR},
      TRANSACTION_CODE = #{record.transactionCode,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      MEMO = #{record.memo,jdbcType=VARCHAR},
      RESULT = #{record.result,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update finance_transaction
    set TRANSACTION_ID = #{record.transactionId,jdbcType=INTEGER},
      ORDER_ID = #{record.orderId,jdbcType=INTEGER},
      ORDER_CODE = #{record.orderCode,jdbcType=VARCHAR},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      IS_SUCCESS = #{record.isSuccess,jdbcType=BIT},
      MESSAGE = #{record.message,jdbcType=VARCHAR},
      TRANSACTION_CODE = #{record.transactionCode,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      MEMO = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entities.business.FinanceTransaction">
    update finance_transaction
    <set>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null">
        ORDER_CODE = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        PAY_TYPE = #{payType,jdbcType=INTEGER},
      </if>
      <if test="isSuccess != null">
        IS_SUCCESS = #{isSuccess,jdbcType=BIT},
      </if>
      <if test="message != null">
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="transactionCode != null">
        TRANSACTION_CODE = #{transactionCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        RESULT = #{result,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where TRANSACTION_ID = #{transactionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="entities.business.FinanceTransaction">
    update finance_transaction
    set ORDER_ID = #{orderId,jdbcType=INTEGER},
      ORDER_CODE = #{orderCode,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      PAY_TYPE = #{payType,jdbcType=INTEGER},
      IS_SUCCESS = #{isSuccess,jdbcType=BIT},
      MESSAGE = #{message,jdbcType=VARCHAR},
      TRANSACTION_CODE = #{transactionCode,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MEMO = #{memo,jdbcType=VARCHAR},
      RESULT = #{result,jdbcType=LONGVARCHAR}
    where TRANSACTION_ID = #{transactionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entities.business.FinanceTransaction">
    update finance_transaction
    set ORDER_ID = #{orderId,jdbcType=INTEGER},
      ORDER_CODE = #{orderCode,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      PAY_TYPE = #{payType,jdbcType=INTEGER},
      IS_SUCCESS = #{isSuccess,jdbcType=BIT},
      MESSAGE = #{message,jdbcType=VARCHAR},
      TRANSACTION_CODE = #{transactionCode,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MEMO = #{memo,jdbcType=VARCHAR}
    where TRANSACTION_ID = #{transactionId,jdbcType=INTEGER}
  </update>
</mapper>