#开发环境
#开发环境
spring:
    datasource:
        
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        
        # 配置这个属性的意义在于，如果存在多个数据源，监控的时候 可以通过名字来区分开来。
        # 如果没有配置，将会生成一个名字， 格式是："DataSource-" + System.identityHashCode(this)
        # 另外配置此属性需要版本大于1.0.5，强行设置name会出错。
        name: springSecurityTest
        url: jdbc:mysql://localhost:3306/db_securitytest
        username: root
        password: CFP5peaTAHiVixoYeqram5gcNR8p/EjsY5Sm0g+XFtOUvTOXV/LawLaIivNhOtyFn9TMxISaIOYR9gaL6lDgIQ==
        
        driver-class-name: com.mysql.jdbc.Driver
        
        # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
        initialSize: 5
        # 最大连接池数量
        maxActive: 20
        # 最小连接池数量
        minIdle: 5
        # 获取连接时最大等待时间，单位毫秒。
        # 配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
        # 如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
        maxWait: 60000
   
        # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
        # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
        validationQuery: select 'x'
        # 单位：秒，检测连接是否有效的超时时间。
        # 底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
        validationQueryTimeout: 15
     
        # 在Druid-1.0.27之前的版本，DruidDataSource建议使用TestWhileIdle来保证连接的有效性，但仍有很多场景需要对连接进行保活处理。
        # 在1.0.28版本之后，新加入keepAlive配置，缺省关闭。
        # 打开KeepAlive之后的效果:
        # 1)初始化连接池时会填充到minIdle数量。
        # 2)连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
        # 3)当网络断开等原因产生的由ExceptionSorter检测出来的死连接被清除后，自动补充连接到minIdle数量。
        keepAlive: true
        
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        # 有两个含义：
        # 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
        # 2) testWhileIdle的判断依据，
        timeBetweenEvictionRunsMillis: 60000
        # 连接保持空闲而不被驱逐的最长时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000

        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true
        
        stat: 
          # 合并SQL
          mergeSql: true
          # 慢SQL记录
          logSlowSql: true
          slowSqlMillis: 5000
        servlet:
          # IP白名单 (没有配置或者为空，则允许所有访问)
          allow: 127.0.0.1
          # IP黑名单 (存在共同时，deny优先于allow)
          deny: 
          # 登录监控界面用户名
          loginUsername: admin
          # 登录监控界面密码 
          loginPassword: 123456
          # 是否能够重置数据
          # 在StatViewSerlvet输出的html页面中，有一个功能是Reset All，执行这个操作之后，会导致所有计数器清零，重新计数。
          resetEnable: false
        filter:
          # 忽略资源
          exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
          sessionStatMaxCount: 1000
          # session统计开关
          sessionStatEnable: true
          # 配置principalSessionName，使得druid能够知道当前的session的用户是谁
          principalSessionName: user.username
          # 配置profileEnable能够监控单个url调用的sql列表
          profileEnable: true
            
        config:
          # Properties属性配置请查看:com.alibaba.druid.filter.config.ConfigFilter
          # 设置密码加密
          decrypt: true
          decrypt-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMqE4gQ3B+/vqcXD7HsfTC3Oi8YYQKdDF8YdA4+KYWkoU3oK6fcT28YUmP+TWBzBPruKcERfDXQHo8hdm5TjXu0CAwEAAQ==

        statementExecutableSqlLogEnable: true